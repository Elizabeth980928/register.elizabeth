{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/Userinfor.jsx","components/Landing.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Userinfor","d","handleDeleteClick","useParams","className","fullName","address","email","location","type","onClick","id","Landing","useState","data","contacts","setContacts","phonenumber","addFormData","setAddFormData","handleAddFormChange","e","preventDefault","fieldName","target","getAttribute","fieldValue","value","newformData","contactId","newContacts","index","findIndex","contact","splice","onSubmit","newContact","nanoid","name","required","placeholder","onChange","length","map","action","to","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f33d5e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { Router } from 'react-router';\r\nimport './Stylling.css';\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\nconst Userinfor = ({d,handleDeleteClick}) => {\r\nconst  id = useParams();\r\n    return ( \r\n        <div className=\"app-container\">\r\n            <div className=\"usersbox\">\r\n           \r\n             {d.fullName} {d.address} {d.email} {d.location} <br/> \r\n             \r\n                   \r\n        <button type=\"button\" onClick={()=>handleDeleteClick(d.id)} className=\"buttonDelete\">Delete</button>\r\n        </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Userinfor;","import React, { useState, Fragment } from \"react\";\r\nimport \"./Stylling.css\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport data from \"./mock-data.json\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Userinfor from \"./Userinfor\";\r\n\r\nconst Landing = () => {\r\n  const [contacts, setContacts] = useState(data);\r\n  const [addFormData, setAddFormData] = useState({\r\n    fullName: \"\",\r\n    address: \"\",\r\n    phonenumber: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const handleAddFormChange = (e) => {\r\n    e.preventDefault();\r\n    const fieldName = e.target.getAttribute(\"name\");\r\n    const fieldValue = e.target.value;\r\n\r\n    const newformData = { ...addFormData };\r\n    newformData[fieldName] = fieldValue;\r\n    setAddFormData(newformData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newContact = {\r\n      id: nanoid(),\r\n      fullName: addFormData.fullName,\r\n      address: addFormData.address,\r\n      phonenumber: addFormData.phonenumber,\r\n      email: addFormData.email,\r\n    };\r\n    const newContacts = [...contacts, newContact];\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => contact.id === contactId);\r\n    newContacts.splice(index, 1);\r\n\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"coverpage\">\r\n        <form onSubmit={handleAddFormSubmit} className=\"form1\">\r\n          <h2>Register</h2>\r\n\r\n            <div className='name'>\r\n                <h5>Name(s):</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"fullName\"\r\n                  required=\"required\"\r\n                  placeholder=\"Please enter your name(s)\"\r\n                  onChange={handleAddFormChange}\r\n                ></input>\r\n            </div>\r\n\r\n            <div className ='name'>\r\n            <h5>Surname:</h5>\r\n\r\n            <input\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  required=\"required\"\r\n                  placeholder=\"Please enter your Surname\"\r\n                  onChange={handleAddFormChange}\r\n                />\r\n                </div>\r\n\r\n                <div className ='name'>\r\n                <h5>Location:</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"phonenumber\"\r\n                  required=\"required\"\r\n                  placeholder=\"Please enter your location\"\r\n                  onChange={handleAddFormChange}\r\n                />\r\n                </div>\r\n\r\n                <div className ='name'>\r\n                <h5>Email:</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  required=\"required\"\r\n                  placeholder=\"Please enter your email\"\r\n                  onChange={handleAddFormChange}\r\n                />\r\n                </div>\r\n\r\n\r\n          <button type=\"submit\">Add new user</button>\r\n        </form>\r\n\r\n        <div className=\"boxuser\">\r\n          <h2>Added users</h2>\r\n\r\n          {contacts.length > 0 ? (\r\n            contacts.map((action) => (\r\n              <Link to={\"/UsersInfor/\" + action.id}>\r\n                <p>\r\n                  {action.fullName} {action.location} {action.location} {action.email} {\" \"}\r\n                 \r\n                </p>\r\n              </Link>\r\n            ))\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route path=\"/UsersInfor/:id\">\r\n            {contacts.map((d) => (\r\n              <Fragment>\r\n                <Userinfor d={d} handleDeleteClick={handleDeleteClick} />\r\n              </Fragment>\r\n            ))}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Landing;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Userinfor from './components/Userinfor';\nimport Landing from './components/Landing';\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <Landing/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}